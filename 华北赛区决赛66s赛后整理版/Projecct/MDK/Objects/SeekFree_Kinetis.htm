<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\SeekFree_Kinetis.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\SeekFree_Kinetis.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060528: Last Updated: Thu Jul 18 08:46:34 2019
<BR><P>
<H3>Maximum Stack Usage =        424 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
PIT0_IRQHandler &rArr; Control_Model_5 &rArr; Round_Obstacle &rArr; Round_Control &rArr; Inductance_filter2 &rArr; PlacePID_Control &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[3]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">HardFault_Handler</a><BR>
 <LI><a href="#[4]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">MemManage_Handler</a><BR>
 <LI><a href="#[5]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">BusFault_Handler</a><BR>
 <LI><a href="#[6]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">UsageFault_Handler</a><BR>
 <LI><a href="#[7]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">SVC_Handler</a><BR>
 <LI><a href="#[8]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">DebugMon_Handler</a><BR>
 <LI><a href="#[9]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">PendSV_Handler</a><BR>
 <LI><a href="#[a]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">SysTick_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[32]">ADC0_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[54]">ADC1_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[5]">BusFault_Handler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[57]">CAN0_Bus_Off_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[58]">CAN0_Error_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[56]">CAN0_ORed_Message_buffer_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[5a]">CAN0_Rx_Warning_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[59]">CAN0_Tx_Warning_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[5b]">CAN0_Wake_Up_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[6a]">CAN1_Bus_Off_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[6b]">CAN1_Error_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[69]">CAN1_ORed_Message_buffer_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[6d]">CAN1_Rx_Warning_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[6c]">CAN1_Tx_Warning_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[6e]">CAN1_Wake_Up_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[33]">CMP0_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[34]">CMP1_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[51]">CMP2_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[67]">CMP3_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[38]">CMT_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[43]">DAC0_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[53]">DAC1_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[b]">DMA0_IRQHandler</a> from isr.o(i.DMA0_IRQHandler) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[15]">DMA10_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[16]">DMA11_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[17]">DMA12_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[18]">DMA13_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[19]">DMA14_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[1a]">DMA15_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[c]">DMA1_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[d]">DMA2_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[e]">DMA3_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[f]">DMA4_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[10]">DMA5_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[11]">DMA6_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[12]">DMA7_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[13]">DMA8_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[14]">DMA9_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[1b]">DMA_Error_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[8]">DebugMon_Handler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[6f]">DefaultISR</a> from startup_mk66f18.o(.text) referenced 139 times from startup_mk66f18.o(RESET)
 <LI><a href="#[5d]">ENET_1588_Timer_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[60]">ENET_Error_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[5f]">ENET_Receive_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[5e]">ENET_Transmit_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[1d]">FTFE_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[35]">FTM0_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[36]">FTM1_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[37]">FTM2_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[52]">FTM3_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[3]">HardFault_Handler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[23]">I2C0_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[24]">I2C1_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[55]">I2C2_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[66]">I2C3_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[28]">I2S0_Rx_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[27]">I2S0_Tx_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[20]">LLWU_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[45]">LPTMR0_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[61]">LPUART0_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[1f]">LVD_LVW_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[44]">MCG_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[1c]">MCM_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[4]">MemManage_Handler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[2]">NMI_Handler</a> from system_mk66.o(i.NMI_Handler) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[3f]">PDB0_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[3b]">PIT0_IRQHandler</a> from isr.o(i.PIT0_IRQHandler) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[3c]">PIT1_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[3d]">PIT2_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[3e]">PIT3_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[46]">PORTA_IRQHandler</a> from isr.o(i.PORTA_IRQHandler) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[47]">PORTB_IRQHandler</a> from isr.o(i.PORTB_IRQHandler) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[48]">PORTC_IRQHandler</a> from isr.o(i.PORTC_IRQHandler) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[49]">PORTD_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[4a]">PORTE_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[9]">PendSV_Handler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[22]">RNG_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[39]">RTC_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[3a]">RTC_Seconds_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[1e]">Read_Collision_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[29]">Reserved46_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[42]">Reserved71_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[4f]">Reserved84_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[50]">Reserved85_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[1]">Reset_Handler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[5c]">SDHC_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[25]">SPI0_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[26]">SPI1_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[4c]">SPI2_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[7]">SVC_Handler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[4b]">SWI_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[71]">Start</a> from system_mk66.o(i.Start) referenced from startup_mk66f18.o(.text)
 <LI><a href="#[a]">SysTick_Handler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[63]">TPM1_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[64]">TPM2_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[62]">TSI0_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[2b]">UART0_ERR_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[2a]">UART0_RX_TX_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[2d]">UART1_ERR_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[2c]">UART1_RX_TX_IRQHandler</a> from isr.o(i.UART1_RX_TX_IRQHandler) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[2f]">UART2_ERR_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[2e]">UART2_RX_TX_IRQHandler</a> from uart2.o(i.UART2_RX_TX_IRQHandler) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[31]">UART3_ERR_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[30]">UART3_RX_TX_IRQHandler</a> from isr.o(i.UART3_RX_TX_IRQHandler) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[4e]">UART4_ERR_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[4d]">UART4_RX_TX_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[40]">USB0_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[41]">USBDCD_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[65]">USBHSDCD_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[68]">USBHS_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[6]">UsageFault_Handler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[21]">WDOG_EWM_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[72]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_mk66f18.o(.text)
 <LI><a href="#[70]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[72]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(.text)
</UL>
<P><STRONG><a name="[111]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[73]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[8a]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[112]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[113]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[114]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[115]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[116]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[1]"></a>Reset_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>ADC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>CAN0_Bus_Off_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>CAN0_Error_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>CAN0_ORed_Message_buffer_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>CAN0_Rx_Warning_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>CAN0_Tx_Warning_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>CAN0_Wake_Up_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>CAN1_Bus_Off_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>CAN1_Error_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>CAN1_ORed_Message_buffer_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>CAN1_Rx_Warning_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>CAN1_Tx_Warning_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>CAN1_Wake_Up_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>CMP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>CMP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>CMP2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>CMP3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>CMT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DAC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>DAC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>DMA1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>DMA2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>DMA3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMA4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DMA5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>DMA6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>DMA7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>DMA8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>DMA9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA_Error_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>DefaultISR</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>ENET_1588_Timer_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>ENET_Error_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>ENET_Receive_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>ENET_Transmit_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>FTFE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>FTM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>FTM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>FTM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>FTM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>I2C3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>I2S0_Rx_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>I2S0_Tx_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>LLWU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>LPTMR0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>LPUART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>LVD_LVW_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>MCG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>MCM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>PDB0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>PIT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>PIT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>PIT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>PORTD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>PORTE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>RTC_Seconds_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>Read_Collision_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>Reserved46_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>Reserved71_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>Reserved84_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>Reserved85_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>SDHC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>SWI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>TPM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>TPM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>TSI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>UART0_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>UART0_RX_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>UART1_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>UART2_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>UART3_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>UART4_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>UART4_RX_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>USB0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>USBDCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>USBHSDCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>USBHS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>WDOG_EWM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>__aeabi_ldivmod</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, ldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __aeabi_ldivmod &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Filter
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Filter2
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_Offset
</UL>

<P><STRONG><a name="[117]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[10e]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
</UL>

<P><STRONG><a name="[118]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[78]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[119]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[11a]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[77]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[be]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inductance_filter2
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inductance_filter
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_Offset
</UL>

<P><STRONG><a name="[11b]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[79]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[7a]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Filter
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Model_7
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Model_6
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_Measure
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlacePID_Control
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inductance_filter2
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inductance_filter
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_Change_Three_Wheels
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_4
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_3
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_2
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_DC
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_4
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_3
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_2
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Obstacle
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erect_Obstacle
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[7f]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlacePID_Control
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inductance_filter2
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inductance_filter
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[80]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[81]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Attitude
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Filter
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Model_7
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Model_6
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_Measure
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlacePID_Control
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inductance_filter2
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inductance_filter
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_Change_Three_Wheels
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_4
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_3
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_2
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_DC
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_4
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_3
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_2
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Obstacle
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erect_Obstacle
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[82]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlacePID_Control
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inductance_filter2
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inductance_filter
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[83]"></a>__aeabi_l2f</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, ffltl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_l2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Filter
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Filter2
</UL>

<P><STRONG><a name="[85]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Attitude
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_Measure
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlacePID_Control
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inductance_filter2
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inductance_filter
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_Change_Three_Wheels
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_4
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_3
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_2
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_DC
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_4
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_3
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_2
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control
</UL>

<P><STRONG><a name="[86]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_Measure
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlacePID_Control
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_Change_Three_Wheels
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_4
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_3
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_2
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_DC
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_4
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_3
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_2
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control
</UL>

<P><STRONG><a name="[a9]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Filter
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Model_7
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Model_6
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlacePID_Control
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inductance_filter2
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inductance_filter
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Obstacle
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erect_Obstacle
</UL>

<P><STRONG><a name="[11c]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text), UNUSED)

<P><STRONG><a name="[e1]"></a>__aeabi_cdcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_Measure
</UL>

<P><STRONG><a name="[88]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Attitude
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Filter
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Model_7
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Model_6
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlacePID_Control
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inductance_filter2
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inductance_filter
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Obstacle
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erect_Obstacle
</UL>

<P><STRONG><a name="[76]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>

<P><STRONG><a name="[7b]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[11d]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[87]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[11e]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[7c]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[11f]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[120]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[89]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[84]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_l2f
</UL>

<P><STRONG><a name="[7e]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[7d]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[74]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[121]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[122]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[123]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[8b]"></a>Balance_Control</STRONG> (Thumb, 730 bytes, Stack size 40 bytes, control.o(i.Balance_Control))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = Balance_Control &rArr; Inductance_filter &rArr; PlacePID_Control &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;range_protect
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Attitude
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Filter
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Sensor_Calculate
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_Measure
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Realize_D
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Realize
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Increase
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTOR_Control
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inductance_filter
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Model_6
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erect_PT
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erect_Obstacle
</UL>

<P><STRONG><a name="[96]"></a>Balance_Control_2</STRONG> (Thumb, 662 bytes, Stack size 40 bytes, control.o(i.Balance_Control_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = Balance_Control_2 &rArr; Get_Attitude &rArr; __hardfp_atan2 &rArr; atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;range_protect
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Attitude
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Filter
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Sensor_Calculate
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_Measure
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlacePID_Control
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Realize_D
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Realize
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Increase
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTOR_Control
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Model_6
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erect_Obstacle
</UL>

<P><STRONG><a name="[98]"></a>Balance_Control_3</STRONG> (Thumb, 662 bytes, Stack size 40 bytes, control.o(i.Balance_Control_3))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = Balance_Control_3 &rArr; Get_Attitude &rArr; __hardfp_atan2 &rArr; atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;range_protect
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Attitude
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Filter
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Sensor_Calculate
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_Measure
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlacePID_Control
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Realize_D
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Realize
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Increase
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTOR_Control
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Model_6
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erect_Obstacle
</UL>

<P><STRONG><a name="[99]"></a>Balance_Control_4</STRONG> (Thumb, 662 bytes, Stack size 40 bytes, control.o(i.Balance_Control_4))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = Balance_Control_4 &rArr; Get_Attitude &rArr; __hardfp_atan2 &rArr; atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;range_protect
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Attitude
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Filter
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Sensor_Calculate
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_Measure
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlacePID_Control
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Realize_D
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Realize
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Increase
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTOR_Control
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Model_6
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erect_Obstacle
</UL>

<P><STRONG><a name="[9a]"></a>Balance_Control_DC</STRONG> (Thumb, 732 bytes, Stack size 40 bytes, control.o(i.Balance_Control_DC))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = Balance_Control_DC &rArr; Inductance_filter &rArr; PlacePID_Control &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;range_protect
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Attitude
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Filter
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Sensor_Calculate
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_Measure
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Realize_D
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Realize
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Increase
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTOR_Control
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inductance_filter
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erect_Obstacle
</UL>

<P><STRONG><a name="[8c]"></a>Balance_Sensor_Calculate</STRONG> (Thumb, 192 bytes, Stack size 8 bytes, imu.o(i.Balance_Sensor_Calculate))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Balance_Sensor_Calculate &rArr; icm_spi_r_reg_bytes &rArr; spi_mosi_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm_spi_r_reg_bytes
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIT0_IRQHandler
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_Change_Three_Wheels
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_4
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_3
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_2
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_DC
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_4
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_3
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_2
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_Offset
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Erect
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erect_Round
</UL>

<P><STRONG><a name="[9c]"></a>Balance_Sensor_Init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, imu.o(i.Balance_Sensor_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = Balance_Sensor_Init &rArr; icm20602_init_spi &rArr; spi_init &rArr; get_clk &rArr; uart_init &rArr; port_init
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm20602_init_spi
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[9e]"></a>Control_Model_0</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, transformers.o(i.Control_Model_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = Control_Model_0 &rArr; Erect_Obstacle &rArr; Balance_Control_DC &rArr; Inductance_filter &rArr; PlacePID_Control &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_PT
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Erect
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erect_Round
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erect_Obstacle
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIT0_IRQHandler
</UL>

<P><STRONG><a name="[a3]"></a>Control_Model_1</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, transformers.o(i.Control_Model_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = Control_Model_1 &rArr; Erect_Obstacle &rArr; Balance_Control_DC &rArr; Inductance_filter &rArr; PlacePID_Control &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_PT
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Erect
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erect_Round
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erect_Obstacle
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIT0_IRQHandler
</UL>

<P><STRONG><a name="[a4]"></a>Control_Model_4</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, transformers.o(i.Control_Model_4))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = Control_Model_4 &rArr; Round_Obstacle &rArr; Round_Control &rArr; Inductance_filter2 &rArr; PlacePID_Control &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Obstacle
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Erect
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erect_Round
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erect_PT
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIT0_IRQHandler
</UL>

<P><STRONG><a name="[a7]"></a>Control_Model_5</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, transformers.o(i.Control_Model_5))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = Control_Model_5 &rArr; Round_Obstacle &rArr; Round_Control &rArr; Inductance_filter2 &rArr; PlacePID_Control &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Obstacle
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Erect
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erect_Round
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erect_PT
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIT0_IRQHandler
</UL>

<P><STRONG><a name="[a8]"></a>Control_Model_6</STRONG> (Thumb, 444 bytes, Stack size 40 bytes, transformers.o(i.Control_Model_6))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = Control_Model_6 &rArr; Balance_Control &rArr; Inductance_filter &rArr; PlacePID_Control &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_4
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_3
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_2
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIT0_IRQHandler
</UL>

<P><STRONG><a name="[aa]"></a>Control_Model_7</STRONG> (Thumb, 470 bytes, Stack size 40 bytes, transformers.o(i.Control_Model_7))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = Control_Model_7 &rArr; Round_Control &rArr; Inductance_filter2 &rArr; PlacePID_Control &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_4
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_3
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_2
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIT0_IRQHandler
</UL>

<P><STRONG><a name="[b]"></a>DMA0_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, isr.o(i.DMA0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = DMA0_IRQHandler &rArr; row_finished &rArr; dma_repeat
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;row_finished
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>Data_Filter</STRONG> (Thumb, 464 bytes, Stack size 80 bytes, imu.o(i.Data_Filter))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = Data_Filter &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_l2f
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIT0_IRQHandler
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_DC
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_4
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_3
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_2
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[b0]"></a>Data_Filter2</STRONG> (Thumb, 420 bytes, Stack size 48 bytes, imu.o(i.Data_Filter2))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Data_Filter2 &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_l2f
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_4
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_3
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_2
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control
</UL>

<P><STRONG><a name="[e2]"></a>Disable_Wdog</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, system_mk66.o(i.Disable_Wdog))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start
</UL>

<P><STRONG><a name="[9f]"></a>Erect_Obstacle</STRONG> (Thumb, 738 bytes, Stack size 40 bytes, transformers.o(i.Erect_Obstacle))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = Erect_Obstacle &rArr; Balance_Control_DC &rArr; Inductance_filter &rArr; PlacePID_Control &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_DC
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_4
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_3
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_2
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Model_1
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Model_0
</UL>

<P><STRONG><a name="[a5]"></a>Erect_PT</STRONG> (Thumb, 158 bytes, Stack size 8 bytes, transformers.o(i.Erect_PT))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = Erect_PT &rArr; Balance_Control &rArr; Inductance_filter &rArr; PlacePID_Control &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Model_5
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Model_4
</UL>

<P><STRONG><a name="[a1]"></a>Erect_Round</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, transformers.o(i.Erect_Round))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = Erect_Round &rArr; Vertical_Change_Three_Wheels &rArr; Get_Attitude &rArr; __hardfp_atan2 &rArr; atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Attitude
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Sensor_Calculate
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_Measure
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTOR_Control
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_Change_Three_Wheels
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Parameter_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Model_5
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Model_4
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Model_1
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Model_0
</UL>

<P><STRONG><a name="[b4]"></a>FTM_port_mux</STRONG> (Thumb, 398 bytes, Stack size 16 bytes, mk60_ftm.o(i.FTM_port_mux))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = FTM_port_mux &rArr; port_init
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_init
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_pwm_init
</UL>

<P><STRONG><a name="[93]"></a>Get_Attitude</STRONG> (Thumb, 210 bytes, Stack size 40 bytes, imu.o(i.Get_Attitude))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = Get_Attitude &rArr; __hardfp_atan2 &rArr; atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kalman_Filter
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIT0_IRQHandler
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_Change_Three_Wheels
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_4
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_3
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_2
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_DC
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_4
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_3
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_2
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Erect
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erect_Round
</UL>

<P><STRONG><a name="[b9]"></a>Image_Get</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, imageprocessing.o(i.Image_Get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Image_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Image_HandleZL
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Image_HandleSL
</UL>

<P><STRONG><a name="[b8]"></a>Image_HandleSL</STRONG> (Thumb, 104 bytes, Stack size 4 bytes, imageprocessing.o(i.Image_HandleSL))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Image_HandleSL &rArr; yuzhiget
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yuzhiget
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Jian_Yi_7H_SL
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Image_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bc]"></a>Image_HandleZL</STRONG> (Thumb, 104 bytes, Stack size 4 bytes, imageprocessing.o(i.Image_HandleZL))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Image_HandleZL &rArr; yuzhiget
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yuzhiget
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Jian_Yi_7H_ZL
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Image_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[90]"></a>Inductance_filter</STRONG> (Thumb, 2812 bytes, Stack size 120 bytes, electromagnetism.o(i.Inductance_filter))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = Inductance_filter &rArr; PlacePID_Control &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;range_protectfloat
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inductance_get
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlacePID_Control
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_DC
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control
</UL>

<P><STRONG><a name="[c2]"></a>Inductance_filter2</STRONG> (Thumb, 2878 bytes, Stack size 120 bytes, electromagnetism.o(i.Inductance_filter2))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = Inductance_filter2 &rArr; PlacePID_Control &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;range_protectfloat
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inductance_get
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlacePID_Control
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control
</UL>

<P><STRONG><a name="[bf]"></a>Inductance_get</STRONG> (Thumb, 246 bytes, Stack size 24 bytes, electromagnetism.o(i.Inductance_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Inductance_get &rArr; adc_once &rArr; adc_start
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_once
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inductance_filter2
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inductance_filter
</UL>

<P><STRONG><a name="[c4]"></a>Inductance_init</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, electromagnetism.o(i.Inductance_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Inductance_init &rArr; adc_init &rArr; port_init
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[bb]"></a>Jian_Yi_7H_SL</STRONG> (Thumb, 966 bytes, Stack size 8 bytes, imageprocessing.o(i.Jian_Yi_7H_SL))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Jian_Yi_7H_SL
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Image_HandleSL
</UL>

<P><STRONG><a name="[bd]"></a>Jian_Yi_7H_ZL</STRONG> (Thumb, 966 bytes, Stack size 8 bytes, imageprocessing.o(i.Jian_Yi_7H_ZL))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Jian_Yi_7H_ZL
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Image_HandleZL
</UL>

<P><STRONG><a name="[b7]"></a>Kalman_Filter</STRONG> (Thumb, 558 bytes, Stack size 0 bytes, imu.o(i.Kalman_Filter))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Attitude
</UL>

<P><STRONG><a name="[92]"></a>MOTOR_Control</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, motor.o(i.MOTOR_Control))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = MOTOR_Control &rArr; ftm_pwm_duty
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_pwm_duty
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;range_protect
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_Change_Three_Wheels
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_4
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_3
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_2
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_DC
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_4
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_3
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_2
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Erect
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erect_Round
</UL>

<P><STRONG><a name="[c7]"></a>MotorInit</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, motor.o(i.MotorInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = MotorInit &rArr; ftm_pwm_init &rArr; FTM_port_mux &rArr; port_init
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_pwm_init
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[2]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_mk66.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[c9]"></a>OLEDIIC_Start</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, oled.o(i.OLEDIIC_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = OLEDIIC_Start &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLEDWrite_IIC_Data
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLEDWrite_IIC_Command
</UL>

<P><STRONG><a name="[ca]"></a>OLEDIIC_Stop</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, oled.o(i.OLEDIIC_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = OLEDIIC_Stop &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLEDWrite_IIC_Data
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLEDWrite_IIC_Command
</UL>

<P><STRONG><a name="[cb]"></a>OLEDIIC_Wait_Ack</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, oled.o(i.OLEDIIC_Wait_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = OLEDIIC_Wait_Ack &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLEDWrite_IIC_Data
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLEDWrite_IIC_Command
</UL>

<P><STRONG><a name="[cc]"></a>OLEDWrite_IIC_Byte</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, oled.o(i.OLEDWrite_IIC_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = OLEDWrite_IIC_Byte &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLEDWrite_IIC_Data
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLEDWrite_IIC_Command
</UL>

<P><STRONG><a name="[cd]"></a>OLEDWrite_IIC_Command</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, oled.o(i.OLEDWrite_IIC_Command))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = OLEDWrite_IIC_Command &rArr; OLEDWrite_IIC_Byte &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLEDWrite_IIC_Byte
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLEDIIC_Wait_Ack
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLEDIIC_Stop
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLEDIIC_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WR_Byte
</UL>

<P><STRONG><a name="[ce]"></a>OLEDWrite_IIC_Data</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, oled.o(i.OLEDWrite_IIC_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = OLEDWrite_IIC_Data &rArr; OLEDWrite_IIC_Byte &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLEDWrite_IIC_Byte
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLEDIIC_Wait_Ack
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLEDIIC_Stop
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLEDIIC_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WR_Byte
</UL>

<P><STRONG><a name="[cf]"></a>OLED_Clear</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, oled.o(i.OLED_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = OLED_Clear &rArr; OLED_WR_Byte &rArr; OLEDWrite_IIC_Data &rArr; OLEDWrite_IIC_Byte &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WR_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[d1]"></a>OLED_Init</STRONG> (Thumb, 246 bytes, Stack size 8 bytes, oled.o(i.OLED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = OLED_Init &rArr; OLED_WR_Byte &rArr; OLEDWrite_IIC_Data &rArr; OLEDWrite_IIC_Byte &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WR_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[d4]"></a>OLED_Set_Pos</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, oled.o(i.OLED_Set_Pos))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = OLED_Set_Pos &rArr; OLED_WR_Byte &rArr; OLEDWrite_IIC_Data &rArr; OLEDWrite_IIC_Byte &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WR_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowChar
</UL>

<P><STRONG><a name="[d5]"></a>OLED_ShowChar</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, oled.o(i.OLED_ShowChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = OLED_ShowChar &rArr; OLED_Set_Pos &rArr; OLED_WR_Byte &rArr; OLEDWrite_IIC_Data &rArr; OLEDWrite_IIC_Byte &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WR_Byte
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Set_Pos
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowNum
</UL>

<P><STRONG><a name="[d6]"></a>OLED_ShowNum</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, oled.o(i.OLED_ShowNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = OLED_ShowNum &rArr; OLED_ShowChar &rArr; OLED_Set_Pos &rArr; OLED_WR_Byte &rArr; OLEDWrite_IIC_Data &rArr; OLEDWrite_IIC_Byte &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_pow
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowChar
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d8]"></a>OLED_ShowString</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, oled.o(i.OLED_ShowString))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = OLED_ShowString &rArr; OLED_ShowChar &rArr; OLED_Set_Pos &rArr; OLED_WR_Byte &rArr; OLEDWrite_IIC_Data &rArr; OLEDWrite_IIC_Byte &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowChar
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d0]"></a>OLED_WR_Byte</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, oled.o(i.OLED_WR_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = OLED_WR_Byte &rArr; OLEDWrite_IIC_Data &rArr; OLEDWrite_IIC_Byte &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLEDWrite_IIC_Data
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLEDWrite_IIC_Command
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowChar
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Set_Pos
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Clear
</UL>

<P><STRONG><a name="[ed]"></a>PD_init</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, system.o(i.PD_init))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[8e]"></a>PID_Increase</STRONG> (Thumb, 94 bytes, Stack size 20 bytes, pid.o(i.PID_Increase))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = PID_Increase
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_Change_Three_Wheels
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_4
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_3
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_2
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_DC
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_4
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_3
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_2
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control
</UL>

<P><STRONG><a name="[b3]"></a>PID_Parameter_Init</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, pid.o(i.PID_Parameter_Init))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Erect
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erect_Round
</UL>

<P><STRONG><a name="[95]"></a>PID_Realize</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, pid.o(i.PID_Realize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PID_Realize
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_Change_Three_Wheels
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_4
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_3
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_2
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_DC
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_4
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_3
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_2
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control
</UL>

<P><STRONG><a name="[91]"></a>PID_Realize_D</STRONG> (Thumb, 190 bytes, Stack size 16 bytes, pid.o(i.PID_Realize_D))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PID_Realize_D
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_Change_Three_Wheels
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_4
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_3
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_2
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_DC
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_4
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_3
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_2
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control
</UL>

<P><STRONG><a name="[3b]"></a>PIT0_IRQHandler</STRONG> (Thumb, 430 bytes, Stack size 8 bytes, isr.o(i.PIT0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = PIT0_IRQHandler &rArr; Control_Model_5 &rArr; Round_Obstacle &rArr; Round_Control &rArr; Inductance_filter2 &rArr; PlacePID_Control &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_turn
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PT_init
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Attitude
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Filter
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Model_7
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Model_6
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Model_5
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Model_4
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Model_1
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Model_0
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Sensor_Calculate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>PORTA_IRQHandler</STRONG> (Thumb, 366 bytes, Stack size 8 bytes, isr.o(i.PORTA_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = PORTA_IRQHandler &rArr; gpio_turn
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_turn
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;range_protect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>PORTB_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, isr.o(i.PORTB_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>PORTC_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, isr.o(i.PORTC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = PORTC_IRQHandler &rArr; VSYNC &rArr; dma_repeat
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VSYNC
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[da]"></a>PT_init</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, system.o(i.PT_init))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIT0_IRQHandler
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[97]"></a>PlacePID_Control</STRONG> (Thumb, 474 bytes, Stack size 120 bytes, pid.o(i.PlacePID_Control))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = PlacePID_Control &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;range_protect
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inductance_filter2
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inductance_filter
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_4
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_3
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_2
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_4
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_3
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_2
</UL>

<P><STRONG><a name="[ab]"></a>Round_Control</STRONG> (Thumb, 822 bytes, Stack size 40 bytes, control.o(i.Round_Control))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = Round_Control &rArr; Inductance_filter2 &rArr; PlacePID_Control &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;range_protect
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Attitude
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Sensor_Calculate
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_Measure
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Realize_D
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Realize
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Increase
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTOR_Control
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inductance_filter2
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Filter2
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Model_7
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_PT
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Obstacle
</UL>

<P><STRONG><a name="[ac]"></a>Round_Control_2</STRONG> (Thumb, 620 bytes, Stack size 40 bytes, control.o(i.Round_Control_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = Round_Control_2 &rArr; Get_Attitude &rArr; __hardfp_atan2 &rArr; atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;range_protect
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Attitude
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Sensor_Calculate
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_Measure
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlacePID_Control
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Realize_D
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Realize
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Increase
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTOR_Control
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Filter2
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Model_7
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Obstacle
</UL>

<P><STRONG><a name="[ad]"></a>Round_Control_3</STRONG> (Thumb, 620 bytes, Stack size 40 bytes, control.o(i.Round_Control_3))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = Round_Control_3 &rArr; Get_Attitude &rArr; __hardfp_atan2 &rArr; atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;range_protect
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Attitude
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Sensor_Calculate
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_Measure
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlacePID_Control
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Realize_D
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Realize
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Increase
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTOR_Control
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Filter2
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Model_7
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Obstacle
</UL>

<P><STRONG><a name="[ae]"></a>Round_Control_4</STRONG> (Thumb, 620 bytes, Stack size 40 bytes, control.o(i.Round_Control_4))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = Round_Control_4 &rArr; Get_Attitude &rArr; __hardfp_atan2 &rArr; atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;range_protect
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Attitude
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Sensor_Calculate
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_Measure
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlacePID_Control
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Realize_D
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Realize
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Increase
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTOR_Control
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Filter2
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Model_7
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Obstacle
</UL>

<P><STRONG><a name="[a2]"></a>Round_Erect</STRONG> (Thumb, 258 bytes, Stack size 8 bytes, transformers.o(i.Round_Erect))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = Round_Erect &rArr; Get_Attitude &rArr; __hardfp_atan2 &rArr; atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Attitude
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Sensor_Calculate
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_Measure
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTOR_Control
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Parameter_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Model_5
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Model_4
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Model_1
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Model_0
</UL>

<P><STRONG><a name="[a6]"></a>Round_Obstacle</STRONG> (Thumb, 628 bytes, Stack size 40 bytes, transformers.o(i.Round_Obstacle))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = Round_Obstacle &rArr; Round_Control &rArr; Inductance_filter2 &rArr; PlacePID_Control &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_4
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_3
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_2
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Model_5
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Model_4
</UL>

<P><STRONG><a name="[a0]"></a>Round_PT</STRONG> (Thumb, 146 bytes, Stack size 8 bytes, transformers.o(i.Round_PT))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = Round_PT &rArr; Round_Control &rArr; Inductance_filter2 &rArr; PlacePID_Control &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Model_1
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Model_0
</UL>

<P><STRONG><a name="[dc]"></a>SYSTEM_CLK</STRONG> (Thumb, 170 bytes, Stack size 8 bytes, system_mk66.o(i.SYSTEM_CLK))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SYSTEM_CLK
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;div_set
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start
</UL>

<P><STRONG><a name="[de]"></a>Sensor_Offset</STRONG> (Thumb, 222 bytes, Stack size 72 bytes, imu.o(i.Sensor_Offset))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = Sensor_Offset &rArr; Balance_Sensor_Calculate &rArr; icm_spi_r_reg_bytes &rArr; spi_mosi_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Sensor_Calculate
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[94]"></a>Speed_Measure</STRONG> (Thumb, 1286 bytes, Stack size 40 bytes, motor.o(i.Speed_Measure))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Speed_Measure &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_quad_get
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_quad_clean
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;range_protect
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_Change_Three_Wheels
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_4
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_3
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_2
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_DC
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_4
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_3
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_2
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Erect
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erect_Round
</UL>

<P><STRONG><a name="[71]"></a>Start</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, system_mk66.o(i.Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Start &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSTEM_CLK
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disable_Wdog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(.text)
</UL>
<P><STRONG><a name="[e3]"></a>System_Init</STRONG> (Thumb, 704 bytes, Stack size 16 bytes, system.o(i.System_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = System_Init &rArr; Get_Attitude &rArr; __hardfp_atan2 &rArr; atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_init_NoAlt
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit_init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_quad_init
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_quad_clean
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_init
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PT_init
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Attitude
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Filter
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Sensor_Calculate
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_irq_en
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inductance_init
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowNum
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips_init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_init
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Parameter_Init
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorInit
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Mode_Judgement
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PD_init
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Clear
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_Offset
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Sensor_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e4]"></a>System_Mode_Judgement</STRONG> (Thumb, 738 bytes, Stack size 8 bytes, system.o(i.System_Mode_Judgement))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = System_Mode_Judgement &rArr; gpio_get
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[2c]"></a>UART1_RX_TX_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, isr.o(i.UART1_RX_TX_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>UART2_RX_TX_IRQHandler</STRONG> (Thumb, 1146 bytes, Stack size 8 bytes, uart2.o(i.UART2_RX_TX_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART2_RX_TX_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_getchar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>UART3_RX_TX_IRQHandler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, isr.o(i.UART3_RX_TX_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART3_RX_TX_IRQHandler &rArr; mt9v032_cof_uart_interrupt
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v032_cof_uart_interrupt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[db]"></a>VSYNC</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, seekfree_mt9v032.o(i.VSYNC))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = VSYNC &rArr; dma_repeat
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_repeat
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORTC_IRQHandler
</UL>

<P><STRONG><a name="[b2]"></a>Vertical_Change_Three_Wheels</STRONG> (Thumb, 448 bytes, Stack size 40 bytes, control.o(i.Vertical_Change_Three_Wheels))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = Vertical_Change_Three_Wheels &rArr; Get_Attitude &rArr; __hardfp_atan2 &rArr; atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;range_protect
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Attitude
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Sensor_Calculate
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_Measure
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Realize_D
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Realize
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Increase
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTOR_Control
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erect_Round
</UL>

<P><STRONG><a name="[f3]"></a>__ARM_fpclassify</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[f1]"></a>__hardfp_atan</STRONG> (Thumb, 622 bytes, Stack size 48 bytes, atan.o(i.__hardfp_atan))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[b6]"></a>__hardfp_atan2</STRONG> (Thumb, 432 bytes, Stack size 48 bytes, atan2.o(i.__hardfp_atan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = __hardfp_atan2 &rArr; atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Attitude
</UL>

<P><STRONG><a name="[f6]"></a>__kernel_poly</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[f2]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __mathlib_dbl_infnan &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[f7]"></a>__mathlib_dbl_infnan2</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __mathlib_dbl_infnan2 &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
</UL>

<P><STRONG><a name="[f4]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __mathlib_dbl_underflow &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[124]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[125]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[126]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[c5]"></a>adc_init</STRONG> (Thumb, 426 bytes, Stack size 16 bytes, mk60_adc.o(i.adc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = adc_init &rArr; port_init
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_init
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inductance_init
</UL>

<P><STRONG><a name="[c3]"></a>adc_once</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, mk60_adc.o(i.adc_once))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = adc_once &rArr; adc_start
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_start
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inductance_get
</UL>

<P><STRONG><a name="[f9]"></a>adc_start</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, mk60_adc.o(i.adc_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = adc_start
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_once
</UL>

<P><STRONG><a name="[f8]"></a>atan</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, atan.o(i.atan))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
</UL>

<P><STRONG><a name="[e7]"></a>camera_init</STRONG> (Thumb, 264 bytes, Stack size 32 bytes, seekfree_mt9v032.o(i.camera_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = camera_init &rArr; dma_portx2buff_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_portx2buff_init
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_init
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_irq_en
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putbuff
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_config
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[dd]"></a>div_set</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, system_mk66.o(i.div_set))
<BR><BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSTEM_CLK
</UL>

<P><STRONG><a name="[fd]"></a>dma_portx2buff_init</STRONG> (Thumb, 398 bytes, Stack size 56 bytes, mk60_dma.o(i.dma_portx2buff_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = dma_portx2buff_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_init
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_init
</UL>

<P><STRONG><a name="[f5]"></a>fabs</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fabs.o(i.fabs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[c6]"></a>ftm_pwm_duty</STRONG> (Thumb, 120 bytes, Stack size 12 bytes, mk60_ftm.o(i.ftm_pwm_duty))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ftm_pwm_duty
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTOR_Control
</UL>

<P><STRONG><a name="[c8]"></a>ftm_pwm_init</STRONG> (Thumb, 296 bytes, Stack size 40 bytes, mk60_ftm.o(i.ftm_pwm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = ftm_pwm_init &rArr; FTM_port_mux &rArr; port_init
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTM_port_mux
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorInit
</UL>

<P><STRONG><a name="[e0]"></a>ftm_quad_clean</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mk60_ftm.o(i.ftm_quad_clean))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_Measure
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[df]"></a>ftm_quad_get</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, mk60_ftm.o(i.ftm_quad_get))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_Measure
</UL>

<P><STRONG><a name="[e5]"></a>ftm_quad_init</STRONG> (Thumb, 218 bytes, Stack size 8 bytes, mk60_ftm.o(i.ftm_quad_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ftm_quad_init &rArr; port_init
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_init
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[ff]"></a>get_clk</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, common.o(i.get_clk))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = get_clk &rArr; uart_init &rArr; port_init
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[fb]"></a>get_config</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, seekfree_mt9v032.o(i.get_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = get_config &rArr; uart_putbuff
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putbuff
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_init
</UL>

<P><STRONG><a name="[b1]"></a>gpio_get</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, mk60_gpio.o(i.gpio_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = gpio_get
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORTA_IRQHandler
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Mode_Judgement
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_PT
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Obstacle
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erect_PT
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erect_Obstacle
</UL>

<P><STRONG><a name="[d2]"></a>gpio_init</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, mk60_gpio.o(i.gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_portx2buff_init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips_init
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
</UL>

<P><STRONG><a name="[c1]"></a>gpio_set</STRONG> (Thumb, 66 bytes, Stack size 20 bytes, mk60_gpio.o(i.gpio_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inductance_filter2
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inductance_filter
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips_init
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLEDWrite_IIC_Byte
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLEDIIC_Wait_Ack
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLEDIIC_Stop
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLEDIIC_Start
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips_writedata_16bit
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips_writeIndex
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips_writeData
</UL>

<P><STRONG><a name="[d9]"></a>gpio_turn</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, mk60_gpio.o(i.gpio_turn))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = gpio_turn
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORTA_IRQHandler
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIT0_IRQHandler
</UL>

<P><STRONG><a name="[9d]"></a>icm20602_init_spi</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, seekfree_icm20602.o(i.icm20602_init_spi))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = icm20602_init_spi &rArr; spi_init &rArr; get_clk &rArr; uart_init &rArr; port_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm_spi_w_reg_byte
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm_spi_r_reg_byte
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm20602_self3_check
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Sensor_Init
</UL>

<P><STRONG><a name="[101]"></a>icm20602_self3_check</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, seekfree_icm20602.o(i.icm20602_self3_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = icm20602_self3_check &rArr; icm_spi_r_reg_byte &rArr; spi_mosi_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm_spi_r_reg_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm20602_init_spi
</UL>

<P><STRONG><a name="[103]"></a>icm_spi_r_reg_byte</STRONG> (Thumb, 40 bytes, Stack size 32 bytes, seekfree_icm20602.o(i.icm_spi_r_reg_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = icm_spi_r_reg_byte &rArr; spi_mosi_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_mosi_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm20602_init_spi
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm20602_self3_check
</UL>

<P><STRONG><a name="[9b]"></a>icm_spi_r_reg_bytes</STRONG> (Thumb, 42 bytes, Stack size 40 bytes, seekfree_icm20602.o(i.icm_spi_r_reg_bytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = icm_spi_r_reg_bytes &rArr; spi_mosi_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_mosi_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Sensor_Calculate
</UL>

<P><STRONG><a name="[102]"></a>icm_spi_w_reg_byte</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, seekfree_icm20602.o(i.icm_spi_w_reg_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = icm_spi_w_reg_byte &rArr; spi_mosi_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_mosi_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm20602_init_spi
</UL>

<P><STRONG><a name="[105]"></a>ips_clear</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, seekfree_ips.o(i.ips_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = ips_clear &rArr; ips_set_region &rArr; ips_writedata_16bit &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips_writedata_16bit
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips_set_region
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips_init
</UL>

<P><STRONG><a name="[108]"></a>ips_displayimage032</STRONG> (Thumb, 140 bytes, Stack size 40 bytes, seekfree_ips.o(i.ips_displayimage032))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = ips_displayimage032 &rArr; ips_set_region &rArr; ips_writedata_16bit &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips_writedata_16bit
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips_set_region
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e8]"></a>ips_init</STRONG> (Thumb, 448 bytes, Stack size 8 bytes, seekfree_ips.o(i.ips_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = ips_init &rArr; spi_init &rArr; get_clk &rArr; uart_init &rArr; port_init
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips_writeIndex
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips_writeData
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[106]"></a>ips_set_region</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, seekfree_ips.o(i.ips_set_region))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = ips_set_region &rArr; ips_writedata_16bit &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips_writedata_16bit
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips_writeIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips_displayimage032
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips_clear
</UL>

<P><STRONG><a name="[10a]"></a>ips_writeData</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, seekfree_ips.o(i.ips_writeData))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ips_writeData &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_mosi
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips_init
</UL>

<P><STRONG><a name="[109]"></a>ips_writeIndex</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, seekfree_ips.o(i.ips_writeIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ips_writeIndex &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_mosi
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips_init
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips_set_region
</UL>

<P><STRONG><a name="[107]"></a>ips_writedata_16bit</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, seekfree_ips.o(i.ips_writedata_16bit))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ips_writedata_16bit &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_mosi
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips_displayimage032
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips_set_region
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips_clear
</UL>

<P><STRONG><a name="[70]"></a>main</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = main &rArr; System_Init &rArr; Get_Attitude &rArr; __hardfp_atan2 &rArr; atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_clk
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seekfree_sendimg_032
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips_displayimage032
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowNum
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Image_HandleZL
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Image_HandleSL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[ef]"></a>mt9v032_cof_uart_interrupt</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, seekfree_mt9v032.o(i.mt9v032_cof_uart_interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mt9v032_cof_uart_interrupt
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_getchar
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_RX_TX_IRQHandler
</UL>

<P><STRONG><a name="[d7]"></a>oled_pow</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, oled.o(i.oled_pow))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = oled_pow
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowNum
</UL>

<P><STRONG><a name="[ec]"></a>pit_init</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, mk60_pit.o(i.pit_init))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[b5]"></a>port_init</STRONG> (Thumb, 102 bytes, Stack size 20 bytes, mk60_port.o(i.port_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = port_init
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_quad_init
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTM_port_mux
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_portx2buff_init
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_init
</UL>

<P><STRONG><a name="[e6]"></a>port_init_NoAlt</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, mk60_port.o(i.port_init_NoAlt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = port_init_NoAlt
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[8f]"></a>range_protect</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, motor.o(i.range_protect))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORTA_IRQHandler
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_Measure
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlacePID_Control
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTOR_Control
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_Change_Three_Wheels
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_4
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_3
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control_2
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Control
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_DC
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_4
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_3
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control_2
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance_Control
</UL>

<P><STRONG><a name="[c0]"></a>range_protectfloat</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, motor.o(i.range_protectfloat))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inductance_filter2
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inductance_filter
</UL>

<P><STRONG><a name="[af]"></a>row_finished</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, seekfree_mt9v032.o(i.row_finished))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = row_finished &rArr; dma_repeat
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_repeat
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_IRQHandler
</UL>

<P><STRONG><a name="[10c]"></a>seekfree_sendimg_032</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, seekfree_mt9v032.o(i.seekfree_sendimg_032))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = seekfree_sendimg_032 &rArr; uart_putbuff
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putbuff
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[100]"></a>spi_init</STRONG> (Thumb, 784 bytes, Stack size 152 bytes, mk60_spi.o(i.spi_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = spi_init &rArr; get_clk &rArr; uart_init &rArr; port_init
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_init
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_clk
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips_init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm20602_init_spi
</UL>

<P><STRONG><a name="[10b]"></a>spi_mosi</STRONG> (Thumb, 256 bytes, Stack size 20 bytes, mk60_spi.o(i.spi_mosi))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = spi_mosi
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips_writedata_16bit
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips_writeIndex
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips_writeData
</UL>

<P><STRONG><a name="[104]"></a>spi_mosi_cmd</STRONG> (Thumb, 484 bytes, Stack size 28 bytes, mk60_spi.o(i.spi_mosi_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = spi_mosi_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm_spi_r_reg_bytes
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm_spi_w_reg_byte
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm_spi_r_reg_byte
</UL>

<P><STRONG><a name="[10f]"></a>systick_delay</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, mk60_systick.o(i.systick_delay))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
</UL>

<P><STRONG><a name="[d3]"></a>systick_delay_ms</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, mk60_systick.o(i.systick_delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = systick_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips_init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_init
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm20602_init_spi
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_Offset
</UL>

<P><STRONG><a name="[ee]"></a>uart_getchar</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, mk60_uart.o(i.uart_getchar))
<BR><BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v032_cof_uart_interrupt
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_RX_TX_IRQHandler
</UL>

<P><STRONG><a name="[e9]"></a>uart_init</STRONG> (Thumb, 452 bytes, Stack size 24 bytes, mk60_uart.o(i.uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = uart_init &rArr; port_init
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_init
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_clk
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_init
</UL>

<P><STRONG><a name="[fa]"></a>uart_putbuff</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, mk60_uart.o(i.uart_putbuff))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = uart_putbuff
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seekfree_sendimg_032
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_init
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_config
</UL>

<P><STRONG><a name="[10d]"></a>uart_putchar</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, mk60_uart.o(i.uart_putchar))
<BR><BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putbuff
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seekfree_sendimg_032
</UL>

<P><STRONG><a name="[eb]"></a>uart_rx_irq_en</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, mk60_uart.o(i.uart_rx_irq_en))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uart_rx_irq_en
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_init
</UL>

<P><STRONG><a name="[ba]"></a>yuzhiget</STRONG> (Thumb, 278 bytes, Stack size 20 bytes, imageprocessing.o(i.yuzhiget))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = yuzhiget
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Image_HandleZL
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Image_HandleSL
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[110]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, mk60_uart.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_irq_en
</UL>

<P><STRONG><a name="[ea]"></a>NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, system.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[fe]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, seekfree_mt9v032.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_init
</UL>

<P><STRONG><a name="[fc]"></a>NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, seekfree_mt9v032.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_init
</UL>

<P><STRONG><a name="[f0]"></a>dma_repeat</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, seekfree_mt9v032.o(i.dma_repeat))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = dma_repeat
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;row_finished
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VSYNC
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
